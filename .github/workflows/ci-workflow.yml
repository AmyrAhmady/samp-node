name: CI
on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-16.04]
        include:
          - os: windows-latest
            name: "windows"
            extension: "zip"
          - os: ubuntu-16.04
            name: "linux"
            extension: "tar.gz"                
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'
      - name: configure
        shell: bash
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
      - name: build
        shell: bash
        run: cd build/ && cmake --build . --config $ENV{BUILD_TYPE}
      - name: package
        shell: bash
        run: cd build && cpack && mv cpack/*.${{ matrix.extension }} ../releases   
          
  release:
    if: contains(github.ref, 'tags/v')
    name: Release
    runs-on: ubuntu-latest
    needs: build    

    steps:
      - name: release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false 
          
      - uses: actions/upload-artifact@v1
        with:
          path: releases/
          name: samp-node-${{ github.ref }}-${{ matrix.name }}.${{ matrix.extension }}